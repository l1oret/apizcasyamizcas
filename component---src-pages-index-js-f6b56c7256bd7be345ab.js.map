{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","data","location","siteTitle","title","groups","allMarkdownRemark","group","length","map","posts","nodes","fieldValue","style","listStyle","post","frontmatter","fields","slug","key","itemScope","itemType","date","Link","to","itemProp"],"mappings":"uJAgDA,IArCY,WAAO,IAAD,EAkBVA,EAAM,WAjBCC,oBAAe,cAiBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,QAWZJ,aAAA,EAAAA,EAAQK,OAAQ,0BAAIL,aAAA,EAAAA,EAAQM,UAAW,S,+FC2B9C,UA/DkB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKL,KAAKC,oBAAV,eAAwBO,QAAxB,QACZC,EAASJ,EAAKK,kBAAkBC,MAEtC,OAAsB,IAAlBF,EAAOG,OAEP,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MAECC,EAAOI,KAAI,SAAAF,GACV,IAAMG,EAAQH,EAAMI,MAEpB,OACE,+BACE,0BACE,yBAAIJ,EAAMK,aAGZ,sBAAIC,MAAO,CAAEC,UAAU,SACpBJ,EAAMD,KAAI,SAAAM,GACT,IAAMX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEpB,UAAU,iBACVsB,WAAS,EACTC,SAAS,6BAET,8BACE,6BAAQN,EAAKC,YAAYM,MACzB,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYrB","file":"component---src-pages-index-js-f6b56c7256bd7be345ab.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\">\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/logo.png\"\n        width={128}\n        height={66}\n        quality={100}\n        alt=\"Profile picture\"\n      /> */}\n      {author?.name && <p>{author?.summary || null}</p>}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const groups = data.allMarkdownRemark.group\n\n  if (groups.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n\n      {groups.map(group => {\n        const posts = group.nodes\n\n        return (\n          <section>\n            <h1>\n              <p>{group.fieldValue}</p>\n            </h1>\n\n            <ol style={{ listStyle: `none` }}>\n              {posts.map(post => {\n                const title = post.frontmatter.title || post.fields.slug\n\n                return (\n                  <li key={post.fields.slug}>\n                    <article\n                      className=\"post-list-item\"\n                      itemScope\n                      itemType=\"http://schema.org/Article\"\n                    >\n                      <header>\n                        <small>{post.frontmatter.date}</small>\n                        <h2>\n                          <Link to={post.fields.slug} itemProp=\"url\">\n                            <span itemProp=\"headline\">{title}</span>\n                          </Link>\n                        </h2>\n                      </header>\n                    </article>\n                  </li>\n                )\n              })}\n            </ol>\n          </section>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: ASC }) {\n      group(field: fields___year) {\n        fieldValue\n        nodes {\n          excerpt\n          fields {\n            slug\n            year\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}